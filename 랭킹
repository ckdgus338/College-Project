#include<cstdio>
#include <iostream>
#include <Windows.h>

using namespace std;
void gotoxy(int x, int y);

[struct info {

	char name[10];


	int score;

};



void AddRank(int, int);

void RankReset(void);

void RankSort(void);

void FileLoad(void);

void FileSave(void);

void RankDraw(void);
]
struct info rank[11];



/*게임이 끝난 후 사용자 이름과 점수,을 랭킹에 저장*/
int rank;

int AddRank( int score)

{

	int Flush_buffer();

 gotoxy(33, 13);

	cout<<("닉네임:");

	gotoxy(41, 13);

	//scanf("%s",rank[10].name);

	fgets(rank[10].name, 10, stdin);



	rank[10].score = score;

	RankSort();

	FileSave();

}





void RankReset(void)

{

	int i;

	for (i = 0; i < 11; i++)

		rank[i].score = 0; //점수가 0점인 상태로 파일을 저장하면 점수,이름이 모두 초기화됨	

	FileSave();

}





/*점수에 따라 랭크 정렬*/

void RankSort(void)

{

	int i, j, cnt = 0;

	struct info temp;



	for (i = 0; i < 10; i++)

	{

		for (j = 0; j < 11; j++)

		{

			if (rank[j].score < rank[j + 1].score)

			{

				temp = rank[j];

				rank[j] = rank[j + 1];

				rank[j + 1] = temp;

			}

		}

	}

	FileSave();

}





/*파일을 열어 저장되어있던 데이터를 불러옴*/

void FileLoad(void)

{

	int i;

	FILE* savefile;



	savefile = fopen(".\\savefile\\rank.txt", "rt");





	if (savefile == NULL) { //오류 or 파일 없을시 새로 생성 

		savefile = fopen(".\\savefile\\rank.txt", "a");

		fclose(savefile);

		return;

	}





	for (i = 0; i < 10; i++)

		fscanf(savefile, " %d %s\n", &rank[i].score, &rank[i].name);



	fclose(savefile);

}





/*파일을 열어 TOP 10위 랭킹기록 후 저장*/

void FileSave(void)

{

	int i;

	FILE* savefile;

	savefile = fopen(".\\savefile\\rank.txt", "wt");



	for (i = 0; i < 10; i++) {

		if (rank[i].score == 0) //점수가 0점이면

			fcout<<(savefile, "0 0 ---\n");

		else

			fcout<<(savefile, " %d %s\n",  rank[i].score, rank[i].name);

	}

	fclose(savefile);

}









void RankDraw(void)

{

	const x = 16;

	int i;

	FrameDraw();

	FileLoad();

	RankSort();





	for (i = 0; i < 10; i++) {

		if (i == 0) ;

		gotoxy(x, (i + 1) * 3 + 2);

		cout<<("[%d위]", i + 1);

		gotoxy(x + 8, (i + 1) * 3 + 2);

		cout<<("닉네임: %s", rank[i].name);


		gotoxy(x + 40, (i + 1) * 3 + 2);

		cout<<("점수: %d", rank[i].score);

		

		Sleep(200);

	}



	while (1)

	{

		if (GetAsyncKeyState(VK_ESCAPE) & 0x8000) break;

		if (GetAsyncKeyState(VK_DELETE) & 0x8000) {

			RankReset();

			break;

		}

	}

	system("cls");

}

